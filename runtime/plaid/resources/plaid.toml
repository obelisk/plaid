execution_threads = 2

[storage.sled]
path = "/tmp/sled"

# Configure the logging system. In this case we only configure the
# stdout logger
[logging."stdout"]


# Configure the loading and linking system. This configures how much
# computation is allocated for module invocations and manual remapping
# of module names to log types which is useful is a synthetic logtype
# contains underscores.
[loading]
module_dir = "../compiled_modules/"
lru_cache_size = 200
[loading.persistent_response_size]
"test_persistent_response.wasm" = 1024
"test_sshcerts_usage.wasm" = 1024

[loading.secrets]
[loading.secrets."testing"]
"test_secret" = "{plaid-secret{test-secret}}"

[loading.log_type_overrides]
"test_time.wasm" = "time"
"test_sshcerts_usage.wasm" = "test_sshcerts"
"test_crashtest.wasm" = "crashtest"
"test_persistent_response.wasm" = "prtest"

# Configure the computation amount. See the loader module for more
# information on how computation cost is calculated.
[loading.computation_amount]
default = 55_000_000
[loading.computation_amount.log_type]
okta = 9_000_000
[loading.computation_amount.module_overrides]
"example_rule.wasm" = 5_000_000

[loading.memory_page_count]
default = 300
[loading.memory_page_count.log_type]
okta = 200
[loading.memory_page_count.module_overrides]
"example_rule.wasm" = 50
"test_crashtest.wasm" = 150

# [apis."okta"]
# token = ""
# domain = ""

[apis."general"]
[apis."general".network.web_requests]
[apis."general"."network"."web_requests"."test-response"]
verb = "post"
uri = "http://localhost:8998/response"
return_body = true
return_code = true
allowed_rules = ["test_time.wasm"]
[apis."general"."network"."web_requests"."test-response"."headers"]
testheader = "Some data here"

# [apis."general"."network"."web_requests"."google_test"]
# verb = "get"
# uri = "https://www.google.com/"
# return_body = true
# return_code = true
# allowed_rules = ["testing_test.wasm"]
# [apis."general"."network"."web_requests"."google_test"."headers"]

# [apis."general"."network"."web_requests"."list_deploy_keys"]
# verb = "get"
# uri = "https://api.github.com/repos/{owner}/{repo}/keys"
# return_body = true
# return_code = true
# allowed_rules = ["testing_test.wasm"]
# [apis."general"."network"."web_requests"."list_deploy_keys"."headers"]
# Authorization = "Bearer github_pat_11AAS..."
# "X-GitHub-Api-Version" = "2022-11-28"
# "Accept" = "application/vnd.github+json"
# "User-Agent" = "Plaid/0.10"

# [apis."general"."network"."web_requests"."create_deploy_key"]
# verb = "post"
# uri = "https://api.github.com/repos/{owner}/{repo}/keys"
# return_body = false
# return_code = true
# allowed_rules = ["testing_test.wasm"]
# [apis."general"."network"."web_requests"."create_deploy_key"."headers"]
# Authorization = "Bearer github_pat_11AAS..."
# "X-GitHub-Api-Version" = "2022-11-28"
# "Accept" = "application/vnd.github+json"
# "User-Agent" = "Plaid/0.10"

# [apis."github"]
# token = ""
# [apis."github".graphql_queries]

[apis."slack"]
[apis."slack"."webhooks"]
[apis."slack"."bot_tokens"]

[apis."web"]
[apis."web".keys]
[apis."web".keys."5d313aea523d41569469e4abd72028d2"]
# To generate the ECDSA256 key PEM, run the following commands:
# openssl ecparam -genkey -name prime256v1 -out ec-params.key
# openssl pkcs8 -topk8 -nocrypt -in ec-params.key -out private-key.pem
# openssl ec -in ec-params.pem -pubout

# This is the example private key from JWT.io. Do not use it in production.
private_key = """
-----BEGIN PRIVATE KEY-----
MIGHAgEAMBMGByqGSM49AgEGCCqGSM49AwEHBG0wawIBAQQgevZzL1gdAFr88hb2
OF/2NxApJCzGCEDdfSp6VQO30hyhRANCAAQRWz+jn65BtOMvdyHKcvjBeBSDZH2r
1RTwjmYSi9R/zpBnuQ4EiMnCqfMPWiZqB4QdbAd0E7oH50VpuZ1P087G
-----END PRIVATE KEY-----
"""

allowed_rules = ["testing_test.wasm"]

[apis."yubikey"]
client_id = 99999
secret_key = ""

# KMS USING IAM

# [apis."aws"]
# [apis."aws"."kms".authentication]
# [apis."aws"."kms".key_configuration]
# "some_key_id" = ["testing_test.wasm", "another_rule.wasm"]

# KMS USING API KEY

# [apis."aws"]
# [apis."aws"."kms"]
# [apis."aws"."kms".authentication]
# access_key_id = "asdf"
# secret_access_key = "asdf"
# region = "asdf"
# [apis."aws"."kms".key_configuration]
# "some_key_id" = ["testing_test.wasm", "another_rule.wasm"]


[data]

# [data.websocket]
# [data.websocket.websockets]
# [data.websocket."websockets"."demo_rpc_call"]
# log_type = "testing"
# [data.websocket."websockets"."demo_rpc_call".uris]
# simplystaking = "wss://some_websocket"
# [data.websocket."websockets"."demo_rpc_call".message_config]
# message = "{ \"id\": 1, \"jsonrpc\": \"2.0\", \"method\": \"eth_getBlockByNumber\", \"params\": [ \"finalized\", false ]}"
# sleep_duration = 100 ## This means the message is sent every 0.1 seconds
# [data.websocket."websockets"."demo_rpc_call"."headers"]

# [data.github]
# org = ""
# log_type = "Web" # Can be one of Web, Git, All

# Authentication using FPAT
# [data.github.authentication]
# token = ""

# Authentication using GitHub App Creds
## [data.github.authentication]
## app_id = 1234
## installation_id = 1234
## private_key = ""

[webhooks."internal"]
listen_address = "0.0.0.0:4554"

# Webhooks for tests
[webhooks."internal".webhooks."timetest"]
log_type = "time"
headers = []

[webhooks."internal".webhooks."persistentresponsetest"]
log_type = "prtest"
logbacks_allowed = "Unlimited"

headers = ["x-forwarded-for"]
[webhooks."internal".webhooks."persistentresponsetest".get_mode]
response_mode = "rule:test_persistent_response.wasm"
[webhooks."internal".webhooks."persistentresponsetest".get_mode.caching_mode]
type = "None"

[webhooks."internal".webhooks."testsshcerts"]
log_type = "test_sshcerts"
headers = []
[webhooks."internal".webhooks."testsshcerts".get_mode]
response_mode = "rule:test_sshcerts_usage.wasm"
[webhooks."internal".webhooks."testsshcerts".get_mode.caching_mode]
type = "None"

[webhooks."internal".webhooks."crashtest"]
log_type = "crashtest"
headers = []
# End webhooks for tests

# Additional webhook examples
[webhooks."internal".webhooks."FFFFA"]
log_type = "testing"
headers = ["x-forwarded-for"]
[webhooks."internal".webhooks."FFFFA".get_mode]
response_mode = "static:this is just static data to return to the caller"

[webhooks."internal".webhooks."FFFFB"]
log_type = "testing"
headers = ["x-forwarded-for"]
[webhooks."internal".webhooks."FFFFB".get_mode]
response_mode = "rule:testing_test.wasm"
[webhooks."internal".webhooks."FFFFB".get_mode.caching_mode]
type = "Timed"
validity = 10

[webhooks."external"]
listen_address = "0.0.0.0:4556"
[webhooks."external".webhooks."AAAA"]
log_type = "testing"
headers = ["notalegitheader", "reallynotlegit"]
[webhooks."external".webhooks."AAAA".get_mode]
response_mode = "facebook:somelongstring"
