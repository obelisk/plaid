name: Integration Tests

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches:  "**"

permissions:
  contents: read

env:
  CARGO_TERM_COLOR: always

jobs:
  build-feature-combination:
    strategy:
      matrix:
        features: ["sled", "aws", "aws,sled"]
    runs-on: ubuntu-latest
    steps:
      - name: Setup Rust
        run: |
          rustup toolchain install nightly-2024-12-14  # pinning the nightly version should help with caching dependencies
          rustup default nightly-2024-12-14
          rustup target add wasm32-unknown-unknown

      - uses: actions/checkout@v4

      - uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            runtime/target/
            modules/target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - name: Build
        run: cd runtime && cargo build --all --release --no-default-features --features ${{ matrix.features }}
  
  
  ubuntu-integration-test:
    runs-on: ubuntu-latest

    steps:
    - name: Setup Rust
      run: |
        rustup toolchain install nightly-2024-12-14  # pinning the nightly version should help with caching dependencies
        rustup default nightly-2024-12-14
        rustup target add wasm32-unknown-unknown

    - uses: actions/checkout@v4

    - uses: actions/cache@v4
      with:
        path: |
          ~/.cargo/bin/
          ~/.cargo/registry/index/
          ~/.cargo/registry/cache/
          ~/.cargo/git/db/
          runtime/target/
          modules/target/
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

    - name: Run Integration Tests on Cranelift
      run: ./testing/integration.sh cranelift

  ubuntu-llvm:
    runs-on: ubuntu-latest

    steps:
    - name: Setup Rust
      run: |
        rustup toolchain install nightly-2024-12-14  # pinning the nightly version should help with caching dependencies
        rustup default nightly-2024-12-14
        rustup target add wasm32-unknown-unknown
        sudo apt install -y libllvm19 llvm-19 llvm-19-dev llvm-19-runtime libpolly-19-dev libclang-common-19-dev

    - uses: actions/checkout@v4

    - uses: actions/cache@v4
      with:
        path: |
          ~/.cargo/bin/
          ~/.cargo/registry/index/
          ~/.cargo/registry/cache/
          ~/.cargo/git/db/
          runtime/target/
          modules/target/
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
    
    - name: Run Integration Tests on LLVM
      run: ./testing/integration.sh llvm